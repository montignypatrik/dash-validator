"""add required_companion_codes
revision = 'e0d691c7bcaa'
down_revision = '75059ed192e6'
branch_labels = None
depends_on = None



Revision ID: a1b2c3d4e5f6
Revises: 
Create Date: 2025-09-20 00:00:00.000000


"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# Replace with the actual autogenerated revision ID Alembic gave you
revision = 'a1b2c3d4e5f6'
down_revision = None  # or set to the previous head if Alembic warns; run `alembic history` to confirm
branch_labels = None
depends_on = None

def upgrade():
    op.create_table(
        'required_companion_codes',
        sa.Column('id', sa.Integer, primary_key=True, autoincrement=True),
        sa.Column('code', sa.String(length=10), nullable=False, index=True),
        sa.Column('requires_code', sa.String(length=10), nullable=False, index=True),
        sa.Column('active', sa.Boolean, nullable=False, server_default=sa.text('true')),
        sa.Column('note', sa.Text, nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False, server_default=sa.text('CURRENT_TIMESTAMP'))
    )
    # Optional: avoid duplicate active rules for the same pair
    op.create_unique_constraint(
        'uq_required_companion_codes_active_pair',
        'required_companion_codes',
        ['code', 'requires_code', 'active']
    )

def downgrade():
    op.drop_constraint('uq_required_companion_codes_active_pair', 'required_companion_codes', type_='unique')
    op.drop_table('required_companion_codes')
